#pragma once
#include <string>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <vector>

using namespace std;

class Instance
{
private:
	int classification = 0;
	vector<double> instanceData;
public:
	Instance() {}
	Instance(string data) { setInstanceData(data); };
	void setClassification(int classification) { this->classification = classification; }
	int dataSize() { return instanceData.size(); }
	
	int getClassification() { return classification; }
	vector<double> getInstanceDataVector() { return instanceData; }
	double getInstanceDataElement(int index) { return instanceData.at(index); }
	void setInstanceData(string data)//What this does is uses the stream and parses it by spaces so we ignore those, since we know exactly what the data would look like we just break it up into symbols and powers and work with that
	{
		istringstream iss(data);
		string sNum;
		while (iss >> sNum)
		{
			{
				char symbol = sNum.at(10);

				int endNum = sNum.at(sNum.length() - 1) - 48;

				double decimal = stod(sNum.substr(0, 9));
				if (symbol == '+')
				{
					decimal *= pow(10, endNum);
				}
				else if (symbol == '-')
				{
					decimal /= pow(10, endNum);
				}

				if (decimal == 1 || decimal == 2)
				{
					classification = decimal;
				}
				else if (decimal != 1 || decimal != 2)
				{
					instanceData.push_back(decimal);
				}
			}
		}
	}
};
